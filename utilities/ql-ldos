#!/mnt/extradrive/apps/anaconda3/bin/python

from __future__ import print_function
import numpy as np
import matplotlib.pyplot as plt
import sys
import os


import argparse
parser = argparse.ArgumentParser()
parser.add_argument("--input",default="LDOS.OUT",
        help='Input file with the bands')
parser.add_argument("--grid",default="False")
parser.add_argument("--col",default="2")

args = parser.parse_args() # get the arguments




# change the font size
import matplotlib
matplotlib.rcParams.update({'font.size': 18})

path = os.path.dirname(os.path.realpath(__file__)) # current path
path += "/../pysrc"
sys.path.append(path) # add library
from interfacetk import plotpyqt

###########################################
import matplotlib.pyplot as plt
from matplotlib.widgets import Slider, Button, RadioButtons


m = np.genfromtxt(args.input).transpose() # read file
x = m[0] # x position
y = m[1] # y position
z = m[int(args.col)] # z position
z = z/np.max(z)


def plot(main):
  fig = plt.gcf()
  plt.gcf().canvas.set_window_title('Local DOS')
  ax = fig.add_subplot(111) # axis for the LDOS
  plt.subplots_adjust(left=0.1, bottom=0.25)
  t = np.arange(0.0, 1.0, 0.001)
  a0 = 5
  f0 = 3
  plt.axis([0, 1, -10, 10])
  axcolor = 'lightgoldenrodyellow'
  smax = 100
  ####################################################
  ax.clear() # clear LDOS
  ax.axis("equal")
  ax.set_xticks([])
  ax.set_yticks([])
  zscale = main.get_combobox("Scale")
  scale = np.abs(z)/np.max(np.abs(z)) # scale to 0,1 interval
  if zscale=="linear": pass
  elif zscale=="logabs": scale = np.log(np.abs(scale))
  else: raise
  sat = main.get_slider("maxsat") # saturation
  if args.grid=="False":
      ss = main.get_slider("DOSSize")
      ss = 1000*ss/np.sqrt(np.max(np.abs(x)))
      cplot = ax.scatter(x,y,s=ss,c=scale,edgecolor="none",
                   cmap=main.get_combobox("cmap"),
                   vmin=main.get_slider("minsat"),
                   vmax=main.get_slider("maxsat")
                   )
      ax.set_facecolor('black')
  else:
      nx = len(np.unique(x))
      ny = len(np.unique(x))
      zmap = scale.reshape((nx,ny))
      cplot = plt.imshow(zmap.T, aspect='auto', origin='lower',
            cmap = plt.get_cmap(main.get_combobox("cmap")),
            extent = ( min(x), max(x), min(y), max(y)),
            vmin=main.get_slider("minsat"),
            vmax=main.get_slider("maxsat")
            )
        #    interpolation=obj.get_combobox("Interpolation"))
  
  plt.axis("equal")
  cb = fig.colorbar(cplot,ticks=[0.0,1.0])
  cb.ax.set_yticklabels(["Min",'Max'])
  return fig


app,main = plotpyqt.get_interface(plot)
if args.grid=="False":
  main.add_slider(label="DOS size",key="DOSSize",
        vs=np.linspace(1e-3,1.0,50),v0=0.5) # Slider for the dots
main.add_slider(label="Max saturation",v0=0.5,key="maxsat",
                             vs=np.linspace(0.,1.0,100)) # Saturation
main.add_slider(label="Min saturation",v0=0.,key="minsat",
                             vs=np.linspace(0.,1.0,100)) # Saturation
main.add_combobox(["inferno","hot","plasma","viridis","cool","rainbow"],label="Color map",key="cmap")
main.add_combobox(["linear","logabs"],label="Scale")
main.setWindowTitle("Local DOS")

main.plot()
main.show()
sys.exit(app.exec_())
