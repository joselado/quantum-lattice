#!/mnt/extradrive/apps/anaconda3/bin/python

import numpy as np
import numpy 
from mayavi.mlab import *

figure(1, fgcolor=(0, 0, 0), bgcolor=(1, 1, 1))

def read_positions():
  """Reads the positions of the system"""
  return np.genfromtxt("POSITIONS.OUT")

def read_density():
  """Reads the density of the system"""
  return np.genfromtxt("DENSITY.OUT").transpose()[1]


def read_ldos():
  """Reads the density of the system"""
  return np.genfromtxt("LDOS.OUT")

def get_lattice():
  """Get the lattice vectors"""
  lines = open('hamiltonian.in','r').readlines() # read the file
  il = 0
  for l in lines:
    il += 1 # increase counter
    if "LATTICE_VECTORS" in l: # if there are no lattice vectors
      return float(lines[il])
  else:
    return None


def ball(center=[0.,0.,0.]):
    pi = numpy.pi
    cos = numpy.cos
    sin = numpy.sin
    dphi, dtheta = pi / 10.0, pi / 10.0
    [phi, theta] = numpy.mgrid[0:pi + dphi * 1.5:dphi,
                               0:2 * pi + dtheta * 1.5:dtheta]
    r = 0.2
    x = r * sin(phi) * cos(theta) + center[0]
    y = r * cos(phi) + center[1]
    z = r * sin(phi) * sin(theta) + center[2]
    return mesh(x, y, z, colormap="bone")



def lorentz(centers=[[0.,0.,0.]], heights=[10.0]):
    """ Creates a set of lorentzian at that position and with a height"""
    if len(heights)<len(centers):
      heights = [10. for i in centers]
    fac = 5.0 # factor to mix the gaussians
    def wave(x,y):
      z = 0.
      for (c,h) in zip(centers,heights):
        r = ((x-c[0])**2+(y-c[1])**2)*fac # renormalized gaussian       
        z += h*np.exp(-(r))-c[2]
      return z+1.0
    xs = [c[0] for c in centers] # get x coordinates
    ys = [c[1] for c in centers] # get y coordinates
    dxy = (max(xs) - min(xs))/200
    [x, y] = numpy.mgrid[-1+min(xs):1.+max(xs):dxy,
                               -1+min(ys):1+max(ys):dxy]
    z = wave(x,y)
    return mesh(x, y, z, colormap="bone")

#centers = np.arange(0.,10.,2.)


# get the lttice constant
l = get_lattice()
# check the dimension, if it is 0 put lattice to None!!!
if not "LATTICE_VECTORS" in open("hamiltonian.in").read():
  l = None
# get the centers of the balls
centers = read_positions()
# if there is lattice constant, add neighbor
#centers = [[2*i,0.,0] for i in range(4)]
heights = read_ldos()
#heights = read_density()
heights = 4*heights/max(heights)
#heights = np.sqrt(heights)
#balls = [ball(center=c) for c in centers]
if not l==None:
  from copy import deepcopy
  cm = centers.tolist()  # copy centers
  cr = [[c[0]+l,c[1],c[2]] for c in cm]
  cl = [[c[0]-l,c[1],c[2]] for c in cm]
  centers = np.array(cm+cr+cl)  
  heights = np.array(heights.tolist()*3)



lorentzs = lorentz(centers=centers,heights=heights)

show()
