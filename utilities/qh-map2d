#!/mnt/extradrive/apps/anaconda3/bin/python


import sys
import numpy as np
import matplotlib
import matplotlib.pyplot as plt
matplotlib.rcParams.update({'font.size': 18})
matplotlib.rcParams['font.family'] = "Bitstream Vera Serif"

def getplot(obj):
    fig = plt.figure(obj.figure.number)
    plt.gcf().canvas.set_window_title('Momentum resolved DOS')
    fig.set_facecolor("white")
    m = np.genfromtxt(args.input).transpose()
    x = m[0]
    y = m[1]
    z = m[2]
    # get dimensions assuming uniform grid
    ux = np.unique(np.round(x,5))
    uy = np.unique(np.round(y,5))
    ny = len(ux)
    nx = len(uy)
    z2d = z.reshape(ny,nx) # makes a (Zy,Zx) matrix out of z
    x2d = x.reshape(ny,nx) # makes a (Zy,Zx) matrix out of z
    y2d = y.reshape(ny,nx) # makes a (Zy,Zx) matrix out of z
    print(x2d.shape,nx,ny)
    minx = np.min(x)
    maxx = np.max(x)
    miny = np.min(y)
    maxy = np.max(y)
    vmax = np.max(z)*(1.01-obj.get_slider("Saturation"))
    vmin = np.min(z)
    ### get the index fr the cuts
    xcut = obj.get_slider("xcut") # xcut
    ycut = obj.get_slider("ycut") # ycut
    ix = max([0,int(nx*xcut)-1]) # x index to plot
    iy = max([int(ny*ycut)-1]) # y index to plot
    ya = np.linspace(miny,maxy,nx) # array with ys
    xa = np.linspace(minx,maxx,ny) # array with xs
    ### now plot everything
    plt.subplot(211) # first figure
    cx = obj.get_combobox("cx")
    cy = obj.get_combobox("cy")
    zmap = z2d.copy() # copy array
    zmap[zmap>vmax] = vmax # maximum value
#    print(zmap.shape) ; exit()
    cplot = plt.imshow(zmap.T, aspect='auto', origin='lower',
            cmap = plt.get_cmap(obj.get_combobox("cmap")), 
            extent = ( minx, maxx, miny, maxy),
            interpolation=obj.get_combobox("Interpolation"))
    plt.xlabel(args.xlabel)
    plt.ylabel(args.ylabel)
    plt.plot(ux[iy]*(ya*0+1),ya,c=cx)
    plt.plot(xa,uy[ix]*(xa*0+1),c=cy)
    cb = fig.colorbar(cplot,ticks=[vmin,vmax])
    cb.ax.set_yticklabels(["Min",'Max'])
    cb.set_label(args.zlabel)
    # cut though the x axis
    plt.subplot(224) # first figure
    plt.plot(ya,z2d[iy,:],cx)
    plt.xlabel(args.ylabel)
    plt.ylabel(args.zlabel)
    plt.subplot(223) # second figure
    plt.plot(xa,z2d[:,ix],cy)
    plt.xlabel(args.xlabel)
    plt.ylabel(args.zlabel)
    plt.tight_layout()
    if args.save_cuts=="True":
        np.savetxt("XCUT_"+args.input,np.array([ya,z2d[iy,:]]).T)
        np.savetxt("YCUT_"+args.input,np.array([xa,z2d[:,ix]]).T)
    return fig




## get the input
import argparse
parser = argparse.ArgumentParser()
parser.add_argument("--input",default="2D.OUT",help='Input file')
parser.add_argument("--xlabel",default="x",help='x label')
parser.add_argument("--ylabel",default="y",help='y label')
parser.add_argument("--save_cuts",default="False",help='Save the cuts')
parser.add_argument("--zlabel",default="z",help='z label')
parser.add_argument("--title",default="Colormap",help='Window title')
args = parser.parse_args() # get the arguments

# now create the interface
import os
import sys
path = os.path.dirname(os.path.realpath(__file__)) # current path
path += "/../pysrc"
sys.path.append(path) # add library
from interfacetk import plotpyqt
app,window = plotpyqt.get_interface(getplot)
window.add_slider(label="xcut",vs=np.linspace(0.,1.,100),v0=0.5) # Slider for the dots
window.add_slider(label="ycut",vs=np.linspace(0.,1.,100),v0=0.5) # Slider for the dots
window.add_slider(label="Saturation",vs=np.linspace(0.,1.,100),v0=0.1)
window.add_combobox(["red","blue","green","black"],label="Color xcut",key="cx")
window.add_combobox(["blue","red","green","black"],label="Color ycut",key="cy")
window.add_combobox(["inferno","hot","plasma","viridis","cool","rainbow"],label="Color map",key="cmap")
window.add_combobox(["bicubic","none"],label="Interpolation")
window.setWindowTitle(args.title)

window.plot()
window.show()
sys.exit(app.exec_())


